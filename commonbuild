#!/bin/bash

# gnucash-dev-docker: Docker containers for automated OS setup and dev/build environ for GnuCash v3+ binaries and docs
# Copyright (C) 2019 Dale Phurrough <dale@hidale.com>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

if [ "$GNC_IGNORE_BUILD_FAIL" != "1" ]; then
    set -e
fi

# prepare source directory
mkdir -p /gnucash
if [ -z "$(ls -A /gnucash)" ] && [ -n "$GNC_GIT_CHECKOUT" ]; then
    git clone -n https://github.com/Gnucash/gnucash.git
    cd /gnucash && git checkout "$GNC_GIT_CHECKOUT"
    cd /
fi

# patch CMakefile to remove forced 'mt' in Boost library pathname search; it only affects the file search, not Boost functionality
# https://askubuntu.com/questions/486006/cannot-find-boost-thread-mt-library?answertab=votes#tab-top
# necessary for OS (e.g. CentOS) that have non-standard Boost library pathnames
sed -i -e '/Boost_USE_MULTITHREADED ON/c #removed problematic Boost_USE_MULTITHREADED ON' /gnucash/CMakeLists.txt

# enables minimal translation support when OS has gettext < 0.19.6
if [ $(((echo '0.19.6'; gettext --version | head -1 | grep -o -E '\b[0-9.]{3,}\b') | sort -V) | head -1) != "0.19.6" ]; then
    export _GNC_CMAKE_COMPAT="$_GNC_CMAKE_COMPAT -DALLOW_OLD_GETTEXT=ON"
fi

# prepare build directory
mkdir -p /build
cd /build

# prepare user settings directory
mkdir -p "$HOME"/.local/share

# build and run unit tests
if [[ "$BUILDTYPE" == "cmake-make" ]]; then
    cmake $_GNC_CMAKE_COMPAT $PLATFORM_CMAKE_OPTS ../gnucash/
    { make -j $(nproc) && [ "$GNC_INSTALL" = "1" ]; } && make install
    make check || . /afterfailure
elif [[ "$BUILDTYPE" == "cmake-ninja" ]]; then
    cmake -GNinja $_GNC_CMAKE_COMPAT $PLATFORM_CMAKE_OPTS ../gnucash
    { ninja && [ "$GNC_INSTALL" = "1" ]; } && ninja install
    ninja check || . /afterfailure
else
    echo "Unknown buildtype: \"$BUILDTYPE\". Not building."
fi

echo "*******************"
echo "* Build concluded *"
echo "*******************"

if [ "$GNC_EXIT_AFTER_TEST" = "1" ]; then
    exit 0
fi

# prevent container from immediately exiting
#exec tail -f /dev/null
exec bash
