version: 1.0.{build}
pull_requests:
  do_not_increment_build_number: true
branches:
  only:
  - /^master/
skip_tags: true
max_jobs: 1 # build cache usage depends on sequential non-parallel jobs
image: Ubuntu1804
clone_depth: 1
shallow_clone: true
environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  DOCKERHUBUSER: diablodale
  DOCKERHUBREPO: gnucashbuilder
  matrix:
    - OS_DISTTAG: ubuntu-14.04
    - OS_DISTTAG: ubuntu-16.04
    - OS_DISTTAG: ubuntu-18.04
    - OS_DISTTAG: ubuntu-19.04
    - OS_DISTTAG: debian-8
    - OS_DISTTAG: debian-9
    - OS_DISTTAG: debian-10
    - OS_DISTTAG: archlinux
    - OS_DISTTAG: centos-7
    - OS_DISTTAG: opensuse-15.0
    - OS_DISTTAG: opensuse-15.1
    - OS_DISTTAG: fedora-28
    - OS_DISTTAG: fedora-29
    - OS_DISTTAG: fedora-30

# cache is restored after init script, after project repo clone, before install script
cache:
  - gnucash.commithash.cached

install:
- sh: |
    #!/bin/bash
    # This script is only needed for when these CI files are in a separate repo than the core GnuCash repo
    set -e
    if [[ (-z "$GNC_GIT_CHECKOUT") || (-z "$APPVEYOR_BUILD_ID") ]]; then
      echo 'Error. GNC_GIT_CHECKOUT and APPVEYOR_BUILD_ID env variables are not all defined' >&2
      echo "       GNC_GIT_CHECKOUT=${GNC_GIT_CHECKOUT}" >&2
      echo "       APPVEYOR_BUILD_ID=${APPVEYOR_BUILD_ID}" >&2
      exit 1
    fi
    if [[ ! -e gnucash.commithash.cached || -z "$(egrep "${APPVEYOR_BUILD_ID}$" gnucash.commithash.cached)" ]]; then
      OBJECTHASH="$(curl --silent --fail --location --retry 3 --connect-timeout 5 -H 'Accept: application/vnd.github.VERSION.sha' "https://api.github.com/repos/gnucash/gnucash/commits/${GNC_GIT_CHECKOUT}")"
      if [[ ("$?" == "0") && -n "$OBJECTHASH" ]]; then
        COMMITHASH="$OBJECTHASH"
        echo -e "${COMMITHASH}\t${APPVEYOR_BUILD_ID}" > gnucash.commithash.cached
        curl --retry 3 --silent --show-error --fail --output /dev/null -X POST -H 'Content-Type: application/json' -d "{\"category\":\"information\", \"message\":\"GnuCash commit ${COMMITHASH} locked for all jobs across this build\"}" "${APPVEYOR_API_URL}api/build/messages"
        echo "GnuCash commit ${COMMITHASH} locked for all jobs across this build"
      else
        echo 'Error. GNC_GIT_CHECKOUT env variable is not a valid GnuCash git repo ref or commit hash' >&2
        exit 1
      fi
    else
      COMMITHASH="$(cut -f 1 gnucash.commithash.cached)"
      if [ -z "$COMMITHASH" ]; then
        echo 'Error. Malformed file gnucash.commithash.cached' >&2
        exit 1
      fi
      echo "GnuCash commit ${COMMITHASH} retrieved lock for all jobs across this build"
    fi

build_script:
- sh: |
    #!/bin/bash
    set -e
    if [[ (-z "$DOCKERHUBUSER") || (-z "$DOCKERHUBREPO") || (-z "$OS_DISTTAG") ]]; then
      echo 'Error. DOCKERHUBUSER, DOCKERHUBREPO, and OS_DISTTAG env variables are not all defined' >&2
      echo "       DOCKERHUBUSER=${DOCKERHUBUSER}" >&2
      echo "       DOCKERHUBREPO=${DOCKERHUBREPO}" >&2
      echo "       OS_DISTTAG=${OS_DISTTAG}" >&2
      exit 1
    fi
    if [[ -n "$DOCKERHUBUSER" && -n "$DOCKERHUBPW" ]]; then
      docker login --username "$DOCKERHUBUSER" \
                   --password-stdin <<< "$DOCKERHUBPW"
    fi
    docker pull "${DOCKERHUBUSER}/${DOCKERHUBREPO}:${OS_DISTTAG}"
    docker tag "${DOCKERHUBUSER}/${DOCKERHUBREPO}:${OS_DISTTAG}" "gnucashbuilder:${OS_DISTTAG}"
    docker build --file commontester.dockerfile \
                 --force-rm \
                 --tag gnucashtester:${OS_DISTTAG} \
                 --build-arg OS_DISTTAG=${OS_DISTTAG} \
                 --build-arg GNC_PHASES=build,install \
                 --build-arg GNC_GIT_CHECKOUT=$(cut -f 1 gnucash.commithash.cached) \
                 .

test_script:
- sh: |
    #!/bin/bash
    set -e
    docker run --init \
               --tty \
               --env GNC_PHASES=test \
               --env GNC_EXIT_WITH_RESULT=1 \
               --name gnucashtester-${OS_DISTTAG} \
               gnucashtester:${OS_DISTTAG}
    docker cp gnucashtester-${OS_DISTTAG}:/build/Testing ./
    curl --retry 3 -F 'file=@./Testing/Temporary/jUnitResults.xml' "https://ci.appveyor.com/api/testresults/junit/${APPVEYOR_JOB_ID}"

artifacts:
- path: Testing/2*/Test.xml
  name: ctest raw xml
- path: Testing/Temporary/CTestCostData.txt
  name: CTestCostData.txt
- path: Testing/Temporary/LastTest*.log
  name: LastTest.log
- path: Testing/Temporary/jUnitResults.xml
  name: junit test xml
