# gnucash-dev-docker: Docker containers for automated OS setup and dev/build environ for GnuCash v3+ binaries and docs
# Copyright (C) 2019 Dale Phurrough <dale@hidale.com>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


# Usage:
#   docker-compose up -d [servicename, ...]
#
# If you supply no servicenames, then docker-compose will attempt to start all configurations below.
# This template (and the matching 'docker run' settings) can be adapted to common needs using 'build args' and 'environment' settings.
# These are described in the Ubuntu 18.04 container below as a working example.
version: '2.4'
services:

  ubuntu-14.04:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=ubuntu
        - OS_TAG=14.04
    image: gnucashbuild:ubuntu-14.04
    container_name: gnucashbuild-ubuntu-14.04
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  ubuntu-16.04:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=ubuntu
        - OS_TAG=16.04
    image: gnucashbuild:ubuntu-16.04
    container_name: gnucashbuild-ubuntu-16.04
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  ubuntu-18.04:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=ubuntu # dockerhub distribution from which the container is based
        - OS_TAG=18.04   # dockerhub tag from which the container is based
    image: gnucashbuild:ubuntu-18.04
    container_name: gnucashbuild-ubuntu-18.04
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON # all GnuCash build options can be set https://code.gnucash.org/wiki/Gnucash_Build_Options
      - GNC_GIT_CHECKOUT=3.5                            # GnuCash git branch|commit|tag to clone and checkout; will not change already existing /build directory content
      #- BUILDTYPE=stop                                 # make build tool: 'cmake-make' or 'cmake-ninja'; or 'stop' to prevent building. Default value is specific to each OS
      #- GNC_IGNORE_BUILD_FAIL=1                        # ignores build errors/failures when set to 1; container's log has details
      - GNC_INSTALL=1                                   # install GnuCash using 'make install' when set to 1 and build was successful; ignores result of unit tests
      #- GNC_EXIT_AFTER_TEST=1                          # immediately stop/exit the container with test results when set to 1; container's log has details; good for CI
      #- DISPLAY=192.168.2.23:0.0                       # X11 setting to run GnuCash inside container and display remotely to X11 on host or another computer
    #volumes:
    #  - ./hostbuilddir:/build                          # maps host build result directory for GnuCash into container for build result
    #  - ./hostgnucashsource:/gnucash                   # mounts host directory containing GnuCash source into container.
                                                        #   Caution: The GnuCash build process alters this source directory. If you mount this
                                                        #   directory from the host, it must be read+write. If you mount this same directory across
                                                        #   multiple containers, you may encounter difficult to resolve problems.

  ubuntu-19.04:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=ubuntu
        - OS_TAG=19.04
    image: gnucashbuild:ubuntu-19.04
    container_name: gnucashbuild-ubuntu-19.04
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  debian-8:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=debian
        - OS_TAG=8
    image: gnucashbuild:debian-8
    container_name: gnucashbuild-debian-8
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  debian-9:
    build:
      context: .
      dockerfile: debian.dockerfile
      args:
        - OS_DIST=debian
        - OS_TAG=9
    image: gnucashbuild:debian-9
    container_name: gnucashbuild-debian-9
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  archlinux:
    build:
      context: .
      dockerfile: arch.dockerfile
      args:
        - OS_DIST=archlinux/base
        - OS_TAG=latest
    image: gnucashbuild:archlinux
    container_name: gnucashbuild-archlinux
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  centos-7:
    build:
      context: .
      dockerfile: rhel.dockerfile
      args:
        - OS_DIST=centos
        - OS_TAG=7
    image: gnucashbuild:centos-7
    container_name: gnucashbuild-centos-7
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  opensuse-15.0:
    build:
      context: .
      dockerfile: suse.dockerfile
      args:
        - OS_DIST=opensuse/leap
        - OS_TAG=15.0
    image: gnucashbuild:opensuse-15.0
    container_name: gnucashbuild-opensuse-15.0
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  opensuse-15.1:
    build:
      context: .
      dockerfile: suse.dockerfile
      args:
        - OS_DIST=opensuse/leap
        - OS_TAG=15.1
    image: gnucashbuild:opensuse-15.1
    container_name: gnucashbuild-opensuse-15.1
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  fedora-28:
    build:
      context: .
      dockerfile: rhel.dockerfile
      args:
        - OS_DIST=fedora
        - OS_TAG=28
    image: gnucashbuild:fedora-28
    container_name: gnucashbuild-fedora-28
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  fedora-29:
    build:
      context: .
      dockerfile: rhel.dockerfile
      args:
        - OS_DIST=fedora
        - OS_TAG=29
    image: gnucashbuild:fedora-29
    container_name: gnucashbuild-fedora-29
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5

  fedora-30:
    build:
      context: .
      dockerfile: rhel.dockerfile
      args:
        - OS_DIST=fedora
        - OS_TAG=30
    image: gnucashbuild:fedora-30
    container_name: gnucashbuild-fedora-30
    init: true
    tty: true
    stdin_open: true
    environment:
      - PLATFORM_CMAKE_OPTS=-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON
      - GNC_GIT_CHECKOUT=3.5
