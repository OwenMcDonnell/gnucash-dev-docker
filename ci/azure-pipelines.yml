# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- azure1
pr: none # will disable PR builds entirely; will not disable CI triggers
variables:
  GNC_GIT_CHECKOUT: '3.5'
  GNC_EXIT_WITH_RESULT: '1'
  PLATFORM_CMAKE_OPTS: '-DCMAKE_INSTALL_PREFIX=/opt -DWITH_PYTHON=ON'
  DOCKERHUBUSER: 'diablodale'
  DOCKERHUBREPO: 'gnucashbuilder'

stages:
- stage: lockCommitStage
  displayName: Lock GnuCash Commit
  jobs:
  - job: lockCommitJob
    displayName: Job
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 5
    cancelTimeoutInMinutes: 1
    steps:
    - checkout: none
    - script: |
        # This script is needed for when these CI files are in a separate repo than the core GnuCash repo
        set -e
        curl --silent --fail --location --retry 3 --connect-timeout 5 "https://api.github.com/repos/gnucash/gnucash/commits/${GNC_GIT_CHECKOUT}" > gnccommit.json
        if [[ ("$?" != "0") || ! -s gnccommit.json ]]; then
          echo "Error retrieving GnuCash git commit from GitHub with GNC_GIT_CHECKOUT=${GNC_GIT_CHECKOUT}" >&2
          exit 1
        fi
        OBJECTHASH="$(jq --raw-output '.sha' < gnccommit.json)"
        if [[ -z "$OBJECTHASH" ]]; then
          echo 'Error. Unable to parse GitHub commit json for sha hash' >&2
          exit 1
        fi
        echo "$OBJECTHASH" > commithash
        echo "GnuCash commit ${OBJECTHASH} locked for all jobs across this build"
      displayName: Resolve Commit Hash
    - publish: commithash
      artifact: gnucash_commithash

- stage: buildTestState
  displayName: Build Test
  jobs:
  - job: buildTestJob
    displayName: Job
    strategy:
      maxParallel: 6
      matrix:
        ubuntu_14_04:
          OS_DISTTAG: ubuntu-14.04
        ubuntu_16_04:
          OS_DISTTAG: ubuntu-16.04
    continueOnError: true  # 'true' if future jobs should run even if this job fails; defaults to 'false'
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 30
    cancelTimeoutInMinutes: 2
    steps:
    - checkout: none
    - download: current
      artifact: gnucash_commithash
    - script: |
        echo "##vso[task.setvariable variable=GNC_GIT_CHECKOUT]$(< ${PIPELINE_WORKSPACE}/gnucash_commithash/commithash)"
      displayName: Retrieve locked commit hash
    - script: |
        docker pull "${DOCKERHUBUSER}/${DOCKERHUBREPO}:${OS_DISTTAG}"
      displayName: Download Docker image
    - script: |
        docker run \
        --name ${DOCKERHUBREPO}-${OS_DISTTAG} \
        --detach \
        --env GNC_GIT_CHECKOUT \
        --env PLATFORM_CMAKE_OPTS \
        --env GNC_EXIT_WITH_RESULT \
        "${DOCKERHUBUSER}/${DOCKERHUBREPO}:${OS_DISTTAG}" \
        tail -f /dev/null
      displayName: Start Docker container
    - script: |
        docker exec \
        --env GNC_PHASES=build \
        ${DOCKERHUBREPO}-${OS_DISTTAG} \
        /commonbuild
      displayName: Build
    - script: |
        docker exec \
        --env GNC_PHASES=install \
        ${DOCKERHUBREPO}-${OS_DISTTAG} \
        /commonbuild
      displayName: Install
    - script: |
        docker exec \
        --env GNC_PHASES=test \
        ${DOCKERHUBREPO}-${OS_DISTTAG} \
        /commonbuild
      displayName: Test
    - script: |
        docker rm \
        --force \
        ${DOCKERHUBREPO}-${OS_DISTTAG}
      displayName: Remove Docker container
